# /etc/nginx/nginx.conf
user root;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log stderr warn;

pid /run/nginx.pid;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
    # The maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 1024;
}

http {
    # Includes mapping of file name extensions to MIME types of responses and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as indicated by the request header Content-Length.
    # If the stated content length is greater than this size, then the client receives the HTTP error code 413.
    # Set to 0 to disable.
    client_max_body_size 1m;

    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 65;

    # Sendfile copies data between one FD and other from within the kernel, which is more efficient than read() + write().
    sendfile on;

    # Don't buffer data-sends (disable Nagle algorithm).
    # Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # Causes nginx to attempt to send its HTTP response head in one packet, instead of using partial frames.
    tcp_nopush on;

    # Path of the file with Diffie-Hellman parameters for EDH ciphers.
    #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

    # Specifies that our cipher suits should be preferred over client ciphers.
    ssl_prefer_server_ciphers on;

    # Enables a shared SSL cache with size that can hold around 8000 sessions.
    ssl_session_cache shared:SSL:2m;

    # Enable gzipping of responses.
    gzip on;

    # Set the Vary HTTP header as defined in the RFC 2616.
    gzip_vary on;

    # Sets the path, format, and configuration for a buffered log write.
    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';
    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    # Define the PHP upstream endpoint
    upstream php {
        server unix:/run/php.sock;
    }

    # And our vhost
    server {
        listen       80 default_server;
        client_max_body_size 1G;
        server_name  _;

        root /app/public;
        index /index.php;


        location / {
            index index.html index.htm index.php;
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ ^/index\.php(/|$) {
            fastcgi_buffers                 256 16k;
            fastcgi_buffer_size             128k;
            fastcgi_busy_buffers_size       256k;
            fastcgi_temp_file_write_size    256k;
            fastcgi_keep_conn               on;
            fastcgi_ignore_client_abort     on;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass            php;
            fastcgi_index           index.php;
            include                 fastcgi_params;
            fastcgi_param           SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param           PATH_INFO $fastcgi_path_info;
        }

        try_files $uri $uri/ @rewrite;

        location @rewrite {
            rewrite ^/(.*)$ /index.php;
        }

        location = /favicon.ico { log_not_found off; access_log off; }
        location = /robots.txt { log_not_found off; access_log off; }
    }
}
